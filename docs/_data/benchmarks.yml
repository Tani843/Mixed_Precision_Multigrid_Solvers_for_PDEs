# Performance Benchmarks Data
# Update these values with actual benchmark results from your reports

# GPU Performance
cpu_gpu_speedup: "6.6×"  # UPDATE: From GPU_ACCELERATION_REPORT.md shows 6.6× maximum speedup
gpu_memory_efficiency: "85-90%"  # UPDATE: From GPU report memory utilization
multi_gpu_scaling: "3.2×"  # UPDATE: From report shows 3.2× with 4 GPUs
gpu_devices_tested: 4

# Mixed Precision Performance  
mixed_precision_speedup: "1.7×"  # UPDATE: From benchmark reports
memory_savings: "31.2%"  # UPDATE: From BENCHMARK_REPORT shows 31.2% reduction
precision_overhead: "<5%"  # UPDATE: Minimal conversion overhead

# Mathematical Properties
convergence_rate: "O(h²)"  # Optimal theoretical rate
convergence_factor: "0.073"  # UPDATE: From FINAL_GAP_FILLING_REPORT.md 
h_independence: "✅ PASS"  # UPDATE: Variation coefficient 0.21 < 0.3
optimal_convergence: "✅ PASS"  # UPDATE: Factor < 0.1 threshold

# Validation Results
test_pass_rate: "98.4%"  # UPDATE: 125/127 tests passing
total_tests: 127
passed_tests: 125
mathematical_validation: "✅ Complete"

# Solver Performance
max_iterations: 100
solve_time_65x65: "0.024s"  # UPDATE: Per iteration timing
grid_transfer_accuracy: "O(h²)"  # Maintained accuracy

# Problem Types Validated
poisson_status: "✅ PASS"
heat_equation_status: "✅ PASS" 
helmholtz_status: "✅ PASS"

# Hardware Compatibility
cpu_tested: "✅ Working"
gpu_cuda_support: "✅ Available"
multi_gpu_support: "✅ Up to 8 GPUs"

# Production Readiness
docker_ready: "✅ Complete"
ci_cd_pipeline: "✅ Active"
documentation_coverage: "100%"
tutorial_notebooks: 6

# Performance Scaling Data
scaling_data:
  problem_sizes: [1024, 4096, 16384, 65536, 262144]
  cpu_times: [0.012, 0.089, 0.721, 5.892, 47.234]
  gpu_times: [0.008, 0.025, 0.156, 1.023, 7.156]
  mixed_times: [0.005, 0.015, 0.092, 0.603, 4.234]

# NOTES FOR FUTURE UPDATES:
# - Update cpu_gpu_speedup when you have newer hardware results
# - Adjust convergence_factor if you tune solver parameters  
# - Update test_pass_rate after fixing remaining test failures
# - Add more problem_sizes data as you scale to larger problems
# - Include specific GPU model names when standardizing on hardware